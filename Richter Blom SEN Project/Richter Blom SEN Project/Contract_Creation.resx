<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>